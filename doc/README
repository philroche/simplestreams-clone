== Simple Sync Format ==
Simple Sync format consists of 2 different file formats.
 * content stream: A collection of multiple item groups of the same "type".
 * stream collection: a list of content streams
   A stream collection is simply a way to provide an index of known content
   streams, and information about them.

Useful definitions
 * item group
   an item group is a list of like items. Ie, all produced by the same build.
   requirements:
    * serial: a 'serial' entry that can be sorted by YYYYMMDD[.X]
    * items: a list of items

   Example item groups are:
    * output of the amd64 cloud image build done on 2012-04-04
    * amd64 images from the cirros release version 0.3.1

 * item
   There are 1 or more items in a item group.
   requirements:
    * name: must be unique within the item group.

   special fields:
    * url: If an item has a 'url', then the target must be obtainable and
      should be downloaded when mirroring.
    * md5sum: stores checksum

   Example:
    * "disk1.img" produced from the amd64 cloud image build done on 2012-04-04
    * -root.tar.gz produced from the same build.

== Stream ==
format: stream-1.0
examples:  doc/example/amd64.yaml doc/example/i386.yaml

Notes:
 * if an item has a 'path' element, that indicates there is a file
   to be downloaded at the 'path' location.
   * path is required to be relative to the mirror root.
     It cannot 
   * All links/urls that appear in collection or stream files must be
     relative to MIRROR_LOCATION
     You then get a path simply by concatinating MIRROR_LOCATION with PATH.
   * '/' is not special to the client.  as that makes mirroring more 
     difficult. If a PATH starts with /, then it would mean:
     MIRROR_LOCATION + PATH. ie, with MIRROR_LOCATION=http://foo.bar/mymirror/
     and PATH=/myfile, you'd end up requesting
     'http://foo.bar/mymirror//myfile', *not* http://foo.bar/myfile
   * absolute links are not allowed.
 * in the event of a 404 or ENOENT on a PATH, the client will consult the 
   'mirrors' entry in the MIRROR.info file, and try to resolve the file
   from *that* mirror.

== Mirror ==
 * A mirror is required to have a MIRROR.info file at its top level.
   That file is required to define an 'iqn', that indicates what it is
   a mirror of, and should contain a 'authoritative_url' indicating
   the upstream mirror for that.
   iqn is used so a client can easily maintain a list of mirrors not
   by 'authoritative_url' but by iqn.
   iqn cannot contain /.
