#!/bin/sh

sourcename="simplestreams"
TEMP_D=""

fail() { echo "$@" 1>&2; exit 1; }
cleanup() {
   [ -z "$TEMP_D" ] || rm -Rf "$TEMP_D"
}

if [ "$1" = "-h" -o "$1" = "--help" ]; then
   cat <<EOF
Usage: ${0##*/}
   build a deb of from trunk directory
   any options are passed straight through to debuild

   Example:
    * ${0##*/} -us -uc

   Its not significantly different than what you'd get by modifying
   the debian/changelog to have the current revno, and then running
     debuild --no-tgz-check
EOF
exit
fi

bname=${0##*/}

start_d=$PWD
top_d=$(cd "$(dirname "${0}")"/.. && pwd)

# grab the first line in the changelog
# hopefully this pulls the version info there
# resulting in something like: 0.1.0~bzrREVNO-1~trunk1
clogver_o=$(sed -n '1s,.*(\([^)]*\)).*,\1,p' debian/changelog)

revno=$(bzr revno) || fail "failed to get revno"
clogver_upstream=${clogver_o%%-*}
clogver_debian=${clogver_o#*-}

uver=$(echo "${clogver_upstream}" | sed "s,REVNO,$revno,")
clogver_new="${uver}-${clogver_debian}"

TEMP_D=$(mktemp -d "${TMPDIR:-/tmp}/${bname}.XXXXXX")

trap cleanup EXIT

echo "building upstream version $uver, debian ver=${clogver_debian}"

dir="${sourcename}-$uver"
tarball="${sourcename}_$uver.orig.tar.gz"

bzr export --format=tgz --root="$dir" --revision="${revno}" \
   "${TEMP_D}/$tarball" ||
   fail "failed to bzr export tarball $tarball"
echo "created ${tarball}"

cd ${TEMP_D}
tar xzf "$tarball" || fail "failed extract tarball"
cd "$dir" || fail "fialed cd $dir"

sed -i "1s,${clogver_o},${clogver_new}," debian/changelog ||
   fail "failed to change replace REVNO in debian/changelog"
debuild "$@" || fail "debuild failed"

cd "$TEMP_D"
for f in *; do
   [ -f "$f" ] || continue
   cp "$f" "$start_d/" || fail "failed copy $f"
   echo "wrote $f"
done
exit
