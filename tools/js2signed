#!/usr/bin/python

import os
import os.path
import json
import sys

import toolutil


def signjs_file(fname):
    content = ""
    with open(fname) as fp:
        content = fp.read()
    data = json.loads(content)
    fmt = data.get("format")
    sjs = fname[0:-len(".js")] + ".sjs"

    if fmt == "stream-collection:1.0":
        sys.stderr.write("collection: %s\n" % fname)
        toolutil.signfile(fname)
        for stream in data.get('streams'):
            path = stream.get('path')
            if path.endswith(".js"):
                stream['path'] = path[0:-len(".js")] + ".sjs"
        with open(sjs, "w") as fp:
            fp.write(json.dumps(data, indent=1))
        toolutil.signfile_inline(sjs)
    elif fmt == "stream:1.0":
        sys.stderr.write("stream: %s\n" % fname)
        toolutil.signfile(fname)
        toolutil.signfile_inline(fname, sjs)
    elif fmt is None:
        sys.stderr.write("skip: %s\n" % fname)
        return
    else:
        sys.stderr.write("warning: unknown format %s" % fmt)
        return


def main():
    if os.path.isfile(sys.argv[1]):
        fname = sys.argv[1]
        if not fname.endswith(".js"):
            sys.stderr.write("file must end with .js\n")
            sys.exit(1)
        signjs_file(fname)
    elif os.path.isdir(sys.argv[1]):
        for root, dirs, files in os.walk(sys.argv[1]):
            for f in [f for f in files if f.endswith(".js")]:
                signjs_file(os.path.join(root, f))
    else:
        sys.stderr.write("input must be file or dir\n")
        sys.exit(1)


if __name__ == '__main__':
    import sys
    main()
